using System.Numerics;
using System.Threading.Tasks;
using Nethereum.Contracts;
using Nethereum.Hex.HexTypes;
using Nethereum.Util;
using Nethereum.Web3;
using Nethereum.Web3.Accounts;

namespace {NameSpace}
{
    public abstract class AbstractContract
    {
        protected UnitConversion _unitConversion = new UnitConversion();

        public Account Account { get; }
        public string Url { get; }
        public Web3 Web3 { get; private set; }

        public ContractOnDisk ContractOnDisk { get; }
        public Contract Contract { get; }

        public string ContractAddress { get; }

        protected readonly HexBigInteger HbiNull = null;
        protected readonly HexBigInteger GasLimitHbi = new HexBigInteger(new BigInteger(6000000));

        public AbstractContract(Account account, string url, BigInteger gasPrice, string contractSubDir, string contractFileName, string addressOfContract = null)
        {
            Account = account;
            Url = url;

            ContractOnDisk = new ContractOnDisk(contractSubDir, contractFileName);

            Web3 = new Web3(Account, url);

            Web3.TransactionManager.DefaultGasPrice = gasPrice;

            ContractAddress = addressOfContract;
            Contract = Web3.Eth.GetContract(ContractOnDisk.Abi, addressOfContract);
        }

		public async Task<bool> Exists()
        {
            if (ContractAddress == null)
            {
                return false;
            }
            var code = await Web3.Eth.GetCode.SendRequestAsync(ContractAddress);
            if (code == "0x")
            {
                return false;
            }
            return true;
        }
    }
}
